{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","posts","loading","className","map","post","id","title","body","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","App","useState","setPosts","setLoading","currentPage","setCurrentPage","postPerPage","useEffect","a","axios","get","res","data","fetchPosts","console","log","indexOfLastPost","indexOfFirstPost","currentPosts","slice","class","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAEaA,EAAQ,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MACnB,OADuC,EAAbC,QAEf,4CAGP,oBAAIC,UAAU,kBAAd,SACMF,EAAMG,KACH,SAAAC,GAAI,OACA,qBAAkBF,UAAU,2EAA5B,kBAA6GE,EAAKC,GAAlH,IAAsH,uBAAtH,YAAqID,EAAKE,MAA1I,IAAiJ,uBAAjJ,mBAAuKF,EAAKG,OAAnKH,EAAKC,UCcpBG,EAtBI,SAAC,GAGhB,IAH0D,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SACrCC,EAAa,GAEXC,EAAE,EAAGA,GAAGC,KAAKC,KAAKL,EAAWD,GAAcI,IAC7CD,EAAYI,KAAKH,GAEvB,OACI,8BACI,oBAAIX,UAAU,oCAAd,SACKU,EAAYT,KAAI,SAAAc,GAAM,OACnB,oBAAiBf,UAAU,YAA3B,SACI,mBAAGgB,QAAS,kBAAKP,EAASM,IAASE,KAAK,IAAIjB,UAAU,YAAtD,SACKe,KAFAA,WCmCdG,MAxCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOpB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAsBJ,mBAAS,GAAxBK,EAAP,oBAEAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,6DACjBL,GAAW,GADM,SAECM,IAAMC,IAAI,8CAFX,OAEXC,EAFW,OAGjBT,EAASS,EAAIC,MACbT,GAAW,GAJM,2CAAH,qDAMhBU,KACC,IAEHC,QAAQC,IAAInC,GAEZ,IAAMoC,EAAkBZ,EAAcE,EAChCW,EAAmBD,EAAkBV,EACrCY,EAAetC,EAAMuC,MAAMF,EAAkBD,GAKnD,OACE,sBAAKlC,UAAU,YAAf,UACE,sBAAKsC,MAAM,YAAX,UACE,oBAAItC,UAAU,gCAAd,wBACA,kEAGF,cAAC,EAAD,CAAYO,aAAciB,EAAahB,WAAYV,EAAMyC,OAAQ9B,SATpD,SAAC+B,GAAD,OAAgBjB,EAAeiB,MAU5C,cAAC,EAAD,CAAO1C,MAAOsC,EAAcrC,QAASA,QC5B5B0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.452521b8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Posts = ({posts, loading}) => {\r\n    if(loading){\r\n        return <h3>Loading...</h3>\r\n    }\r\n    return (\r\n        <ul className=\"list-group mb-4\">\r\n             {posts.map(\r\n                 post =>(\r\n                     <li key={post.id} className=\"list-group-item text-body list-group-item-action list-group-item-warning\"> Id: {post.id} <br/> Title:  {post.title} <br/> Descriptions:  {post.body}</li>\r\n                 )\r\n             )}\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate}) => {\r\n    const pageNumbers =[]\r\n\r\n    for(let i=1; i<=Math.ceil(totalPosts/postsPerPage);i++){\r\n          pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination justify-content-center\">\r\n                {pageNumbers.map(number =>(\r\n                    <li key={number} className=\"page-item\">\r\n                        <a onClick={()=> paginate(number)} href=\"#\" className=\"page-link\">\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import './App.css';\nimport axios from \"axios\"\nimport React, { useState, useEffect } from 'react'\nimport { Posts } from './components/Posts';\nimport Pagination from './components/Pagination';\n\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage] = useState(5);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true)\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\")\n      setPosts(res.data)\n      setLoading(false)\n    }\n    fetchPosts()\n  }, [])\n\n  console.log(posts)\n  //get current post\n  const indexOfLastPost = currentPage * postPerPage; //10\n  const indexOfFirstPost = indexOfLastPost - postPerPage; //0\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n  //paginate\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <div className=\"container\">\n      <div class=\"jumbotron\">\n        <h1 className=\"text-primary font-weight-bold\">Pagination</h1>\n        <p>Using reactjs and bootstrap...</p>\n\n      </div>\n      <Pagination postsPerPage={postPerPage} totalPosts={posts.length} paginate={paginate} />\n      <Posts posts={currentPosts} loading={loading} />\n     \n\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}